{
  "openapi": "3.0.0",
  "info": {
    "title": "Botium Speech Processing API",
    "version": "1.4.1",
    "description": "Botium Speech Processing API"
  },
  "basePath": "/",
  "paths": {
    "/api/status": {
      "get": {
        "description": "Returns Botium Speech Processing Status",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Botium Speech Processing Status",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "UNAVAILABLE"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/sttlanguages": {
      "get": {
        "description": "Get list of STT languages",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stt",
            "description": "Speech-to-text backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "kaldi",
                "google",
                "ibm",
                "azure",
                "awstranscribe"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported STT languages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/stt/{language}": {
      "post": {
        "description": "Convert audio file to text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "language",
            "description": "Language code (as returned from sttlanguages endpoint)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hint",
            "description": "Hint text for the Speech-to-text backend (supported by google and azure)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wer",
            "description": "Text for calculating the Levenshtein edit distance for the result text (word error rate)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stt",
            "description": "Speech-to-text backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "kaldi",
                "google",
                "ibm",
                "azure",
                "awstranscribe"
              ]
            }
          },
          {
            "name": "cache",
            "description": "Use result cache (default Y)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Y",
                "N"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Audio file",
          "content": {
            "audio/wav": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extracted text",
            "schema": {
              "properties": {
                "text": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ttsvoices": {
      "get": {
        "description": "Get list of voices",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tts",
            "description": "Text-to-speech backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "ibm",
                "azure",
                "polly",
                "marytts",
                "picotts"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported voices",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "gender": {
                    "type": [
                      "male",
                      "female",
                      "neutral"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ttslanguages": {
      "get": {
        "description": "Get list of TTS languages",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tts",
            "description": "Text-to-speech backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "ibm",
                "azure",
                "polly",
                "marytts",
                "picotts"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported TTS languages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/tts/{language}": {
      "get": {
        "description": "Convert text file to audio",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "audio/wav"
        ],
        "parameters": [
          {
            "name": "language",
            "description": "Language code (as returned from ttslanguages endpoint)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "description": "Text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voice",
            "description": "Voice name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tts",
            "description": "Text-to-speech backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "ibm",
                "azure",
                "polly",
                "marytts",
                "picotts"
              ]
            }
          },
          {
            "name": "cache",
            "description": "Use result cache (default Y)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Y",
                "N"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audio file",
            "content": {
              "audio/wav": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/audio/info": {
      "post": {
        "description": "Returns information about audio file",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "Audio file",
          "content": {
            "audio/wav": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audio information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/convertprofiles": {
      "get": {
        "description": "Get list of audio conversion profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of supported audio conversion profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/convert/{profile}": {
      "post": {
        "description": "Convert audio file",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "audio/*"
        ],
        "parameters": [
          {
            "name": "profile",
            "description": "Conversion profile (for example WAVTOMONOWAV, MP3TOMONOWAV)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "description": "Start Timecode within audio stream (01:32)",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^([0-5][0-9]):([0-5][0-9])$"
            }
          },
          {
            "name": "end",
            "description": "End Timecode within audio stream (02:48)",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^([0-5][0-9]):([0-5][0-9])$"
            }
          }
        ],
        "requestBody": {
          "description": "Audio file",
          "content": {
            "audio/wav": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audio file",
            "content": {
              "audio/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/convert": {
      "post": {
        "description": "Convert audio file in multiple steps",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "audio/*"
        ],
        "parameters": [
          {
            "name": "profile",
            "description": "Conversion profile (for example WAVTOMONOWAV, MP3TOMONOWAV)",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "start",
            "description": "Start Timecode within audio stream (01:32)",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^([0-5][0-9]):([0-5][0-9])$"
            }
          },
          {
            "name": "end",
            "description": "End Timecode within audio stream (02:48)",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^([0-5][0-9]):([0-5][0-9])$"
            }
          }
        ],
        "requestBody": {
          "description": "Audio file",
          "content": {
            "audio/wav": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audio file",
            "content": {
              "audio/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/wer": {
      "get": {
        "description": "Calculate Levenshtein edit distance between two strings (word error rate)",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "text1",
            "description": "Text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text2",
            "description": "Text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Levenshtein Edit Distance on word level",
            "schema": {
              "properties": {
                "distance": {
                  "type": "integer"
                },
                "wer": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/api/sttstream/{language}": {
      "post": {
        "description": "Open a Websocket stream vor converting audio stream to text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "language",
            "description": "Language code (as returned from sttlanguages endpoint)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stt",
            "description": "Speech-to-text backend",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "kaldi",
                "google",
                "ibm",
                "azure",
                "awstranscribe"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Websocket Url to stream the audio to, and the uri to check status and end the stream",
            "schema": {
              "properties": {
                "wsUri": {
                  "type": "string"
                },
                "statusUri": {
                  "type": "string"
                },
                "endUri": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/sttstatus/{streamId}": {
      "get": {
        "description": "Check a Websocket stream for converting audio stream to text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "streamId",
            "description": "Stream Id (as returned from sttstream endpoint)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Websocket stream ok"
          },
          "404": {
            "description": "Websocket stream not available"
          }
        }
      }
    },
    "/api/sttend/{streamId}": {
      "get": {
        "description": "Close a Websocket stream for converting audio stream to text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "streamId",
            "description": "Stream Id (as returned from sttstream endpoint)",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Websocket stream closed"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "BOTIUM_API_TOKEN"
      }
    }
  },
  "tags": []
}